	<footer>
		<div class="container">
			<div class="row">
				Al día Ecuador &copy; <%= new Date().getFullYear() %>
			</div>
			<!--<img src="/public/img/Logo.png">-->
		</div>
	</footer>


<div class="modal" tabindex="-1" role="dialog" id="modalYoutube">
	<div class="modal-dialog" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title">Enter Youtube URL</h5>
				<button type="button" class="close" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>

			<div class="modal-body">
				<p>
					<input type="url" name="youtube_url" placeholder="Enter youtube URL" required class="form-control" form="form-add-post" />
				</p>
			</div>
			
			<div class="modal-footer">
				<button type="button" class="btn btn-primary" data-dismiss="modal">Add Youtube URL</button>
				<button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
			</div>
		</div>
	</div>
</div>

<div class="modal" id="shareInPagesModal" tabindex="-1" role="dialog" aria-hidden="true">
	<div class="modal-dialog" style="max-width: 1000px;">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title">Share in pages you manage</h5>
				<button type="button" class="close" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>

			<div class="modal-body"></div>
		</div>
	</div>
</div>

<div class="modal" id="shareInGroupModal" tabindex="-1" role="dialog" aria-hidden="true">
	<div class="modal-dialog" style="max-width: 1000px;">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title">Share in groups</h5>
				<button type="button" class="close" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>

			<div class="modal-body"></div>
		</div>
	</div>
</div>

<div class="modal" id="replyModal" tabindex="-1" role="dialog" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title">Reply</h5>
				<button type="button" class="close" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>

			<div class="modal-body">
				<form onsubmit="return prepareToReply(this);">
					<input type="hidden" name="postId">
					<input type="hidden" name="commentId">
					<textarea name="reply" placeholder="Post your reply"></textarea>
					<button type="submit">Post</button>
				</form>
			</div>
		</div>
	</div>
</div>

<!-- The Modal -->
<div id="edit-post-modal" class="modal">
	<!-- Modal content -->
	<div class="modal-content">
		<h3>Edit post <span class="close" onclick="closeModal('edit-post-modal')">&times;</span></h3>

		<form method="POST" action="/editPost" enctype="multipart/form-data" id="form-edit-post" onsubmit="return doEditPost(this)">			
			<input type="hidden" name="_id" />
			<input type="hidden" name="type" />

			<textarea rows="2" name="caption" placeholder="comparte tus ideas"></textarea>
			<div class="attachments">
				<ul>
					<li>
						<input type="file" multiple name="files" accept="image/*,audio/*,video/*" />
					</li>

					<li style="margin-right: 20px;">
						<i class="fa fa-youtube" onclick="showPopupYoutubeURL()" style="cursor: pointer; font-size: 30px;"></i>
					</li>

					<li>
						<button type="submit" name="submit">
							Post
							<i class="fa fa-spinner fa-spin" style="display: none;"></i>
						</button>
					</li>
				</ul>
			</div>
		</form>
	</div>
</div>

<!-- The Modal -->
<div id="delete-post-modal" class="modal">
	<!-- Modal content -->
	<div class="modal-content" style="width: 500px;">
		<h3>Eliminar <span class="close" onclick="closeModal('delete-post-modal')">&times;</span></h3>
		
		<p>¿Esta seguro que quiere eliminar esta publicación de  Al día Ecuador ?</p>
		<button type="button" class="btn btn-danger" onclick="deletePost(this);">Eliminar</button>
	</div>
</div>

<!-- The Modal -->
<div id="post-likers-modal" class="modal">
	<!-- Modal content -->
	<div class="modal-content" style="width: 500px;">
		<!-- created from AJAX -->
	</div>
</div>

<!-- The Modal -->
<div id="post-dislikers-modal" class="modal">
	<!-- Modal content -->
	<div class="modal-content" style="width: 500px;">
		<!-- created from AJAX -->
	</div>
</div>

<!-- The Modal -->
<div id="post-sharers-modal" class="modal">
	<!-- Modal content -->
	<div class="modal-content" style="width: 500px;">
		<!-- created from AJAX -->
	</div>
</div>

<!-- Modal -->
<div class="modal" id="postCommentsModal">
	<div class="modal-dialog modal-lg">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title">Comentarios</h5>
				<button type="button" class="close" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>

			<div class="modal-body">

				<table class="table table-bordered">
					<tbody></tbody>
				</table>

				<div id="post-comments"></div>

				<form method="POST" id="form-post-comment" onsubmit="return doPostComment(this)">
					<input type="hidden" name="_id" />
					<textarea name="comment" class="form-control emoji" required></textarea>
				</form>
			</div>

			<div class="modal-footer">
				<button type="button" class="mtr-btn" data-dismiss="modal">
					<span>Cerrar</span>
				</button>

				<button type="submit" name="submit" form="form-post-comment" class="mtr-btn">
					<span>Publicar Comentario</span>
				</button>
			</div>
		</div>
	</div>
</div>

<script src="/public/js/jquery-3.3.1.min.js"></script>
<!-- <script src="/public/js/popper.min.js"></script> -->
<script src="/public/js/bootstrap.min.js"></script>
<!-- <script src="/public/emoji/inputEmoji.js"></script> -->

<script src="/public/js/main.min.js"></script>
<script src="/public/swal/sweetalert.min.js"></script>
<script src="/public/wysiwyg/js/froala_editor.min.js"></script>
<script src="/public/wysiwyg/js/plugins/image.min.js"></script>
<script src="/public/wysiwyg/js/plugins/video.min.js"></script>
<script src="/public/js/owl.carousel.min.js"></script>
<script src="/public/video-js/video.min.js"></script>
<script src="/public/wavesurfer/wavesurfer.js"></script>
<script src="/public/js/qrcode.js"></script>

<script src="/public/js/script.js?v=<%= new Date().getTime() %>"></script>
<script src="/public/js/socket.io.js"></script>
<script src="/public/js/load-more.js"></script>

<script>

	window.user = null;
	var socketIO = io(mainURL);

	$.fn.emoji = function (params) {
		var defaults = {
			button: '&#x1F642;',
			place: 'before',
			emojis: ['&#x1F642;', '&#x1F641;', '&#x1f600;', '&#x1f601;', '&#x1f602;', '&#x1f603;', '&#x1f604;', '&#x1f605;', '&#x1f606;', '&#x1f607;', '&#x1f608;', '&#x1f609;', '&#x1f60a;', '&#x1f60b;', '&#x1f60c;', '&#x1f60d;', '&#x1f60e;', '&#x1f60f;', '&#x1f610;', '&#x1f611;', '&#x1f612;', '&#x1f613;', '&#x1f614;', '&#x1f615;', '&#x1f616;', '&#x1f617;', '&#x1f618;', '&#x1f619;', '&#x1f61a;', '&#x1f61b;', '&#x1f61c;', '&#x1f61d;', '&#x1f61e;', '&#x1f61f;', '&#x1f620;', '&#x1f621;', '&#x1f622;', '&#x1f623;', '&#x1f624;', '&#x1f625;', '&#x1f626;', '&#x1f627;', '&#x1f628;', '&#x1f629;', '&#x1f62a;', '&#x1f62b;', '&#x1f62c;', '&#x1f62d;', '&#x1f62e;', '&#x1f62f;', '&#x1f630;', '&#x1f631;', '&#x1f632;', '&#x1f633;', '&#x1f634;', '&#x1f635;', '&#x1f636;', '&#x1f637;', '&#x1f638;', '&#x1f639;', '&#x1f63a;', '&#x1f63b;', '&#x1f63c;', '&#x1f63d;', '&#x1f63e;', '&#x1f63f;', '&#x1f640;', '&#x1f643;', '&#x1f4a9;', '&#x1f644;', '&#x2620;', '&#x1F44C;','&#x1F44D;', '&#x1F44E;', '&#x1F648;', '&#x1F649;', '&#x1F64A;'],
			fontSize: '20px',
			listCSS: {position: 'absolute', border: '1px solid gray', 'background-color': '#fff', display: 'none'},
			rowSize: 10,
		};
		var settings = {};
		if (!params) {
			settings = defaults;
		} else {
			for (var n in defaults) {
				settings[n] = params[n] ? params[n] : defaults[n];
			}
		}

		this.each(function (n, input) {
			var $input = $(input);

			function showEmoji() {
				$list.show();
				$input.focus();
				setTimeout(function () {
					$(document).on('click', closeEmoji);
				}, 1);
			}

			function closeEmoji() {
				$list.hide();
				$(document).off('click', closeEmoji);
			}

			function clickEmoji(ev) {
				if (input.selectionStart || input.selectionStart == '0') {
					var startPos = input.selectionStart;
					var endPos = input.selectionEnd;
					input.value = input.value.substring(0, startPos)
						+ ev.currentTarget.innerHTML
						+ input.value.substring(endPos, input.value.length);
				} else {
					input.value += ev.currentTarget.innerHTML;
				}

				closeEmoji();
				$input.focus();
				input.selectionStart = startPos + 2;
				input.selectionEnd = endPos + 2;
			}

			var $button = $("<span>").html(settings.button).css({cursor: 'pointer', 'font-size': settings.fontSize}).on('click', showEmoji);
			var $list = $('<div>').css(defaults.listCSS).css(settings.listCSS);
			for (var n in settings.emojis) {
				if (n > 0 && n % settings.rowSize == 0) {
					$("<br>").appendTo($list);
				}
				$("<span>").html(settings.emojis[n]).css({cursor: 'pointer', 'font-size': settings.fontSize}).on('click', clickEmoji).appendTo($list);
			}

			if (settings.place === 'before') {
				$button.insertBefore(this);
			} else {
				$button.insertAfter(this);
			}
			$list.insertAfter($input);
		});
		return this;
	}

	function getUser() {

		if (localStorage.getItem("accessToken")) {

			var ajax = new XMLHttpRequest();
			ajax.open("POST", "/getUser", true);

			ajax.onreadystatechange = function() {
				if (this.readyState == 4 && this.status == 200) {

					var response = JSON.parse(this.responseText);

					if (response.status == "success") {
						window.user = response.data;



                        var friends = window.user.friends;
                        var unReadInbox = 0;

                        for (var a = 0; a < friends.length; a++) {
                            for (var b = 0; b < friends[a].inbox.length; b++) {
                                if (!friends[a].inbox[b].is_read) {
                                    unReadInbox++;
                                }
                            }
                        }
                        if (unReadInbox > 0) {
                        	if (document.getElementById("inbox-badge") != null) {
	                            document.getElementById("inbox-badge").innerHTML = unReadInbox
	                        }
                        }

                        if (typeof isJoinGroupChatPage !== "undefined" && isJoinGroupChatPage) {
                        	fetchGroupChatDetail()
                        }

                        if (typeof isGroupChatPage !== "undefined" && isGroupChatPage) {
                        	fetchGroupsForChat()
                        }

                        if (typeof isOnWatchPage !== "undefined" && isOnWatchPage) {
                        	fetchWatch()
                        }

                        if (typeof isOnMyAdsPage !== "undefined" && isOnMyAdsPage) {
                        	fetchMyAds()
                        }

 
                        if (typeof onViewStoryPage !== "undefined" && onViewStoryPage) {
                        	showSingleStory();
                        }

                        if (typeof isProfileViews !== "undefined" && isProfileViews) {
                        	getProfileViews();
                        }

                        if (typeof isUserProfile !== "undefined" && isUserProfile) {
                        	getUserFeed();
                        }

						if (typeof isUpdateProfile !== "undefined" && isUpdateProfile) {
							showProfileData();
						}

						if (typeof isAddStoryPage !== "undefined" && isAddStoryPage) {
							onInitAddStoryPage();
						}

						if (typeof isHomePage !== "undefined" && isHomePage) {
							showStories();
							
							showNewsfeed();
						}

						if (typeof isSearchResults !== "undefined" && isSearchResults) {
							showSearchResults();
						}

						if (typeof isInbox !== "undefined" && isInbox) {
							fetchGroupsForChat()
							showFriends()
							initializeEmoji()
						}

						if (typeof isFriends !== "undefined" && isFriends) {
							showFriends()
						}

						if (typeof isPages !== "undefined" && isPages) {
							getPages();
						}

						if (typeof isPageDetail !== "undefined" && isPageDetail) {
							getPageDetail();
						}

						if (typeof isPostDetail !== "undefined" && isPostDetail) {
							showPostDetails();
						}

						if (typeof isRightSidebar !== "undefined" && isRightSidebar) {
							getMyGroups();
						}

						if (typeof isGroups !== "undefined" && isGroups) {
							getGroups();
						}

						if (typeof isGroupDetail !== "undefined" && isGroupDetail) {
							getGroupDetail();
						}

						if (typeof isCustomerSupport !== "undefined" && isCustomerSupport) {
							getMyAllTickets();
						}

						if (typeof isEditTicketPage !== "undefined" && isEditTicketPage) {
							getTicketData();
						}

						if (typeof isTicketDetail !== "undefined" && isTicketDetail) {
							getTicketDetail();
						}

						if (typeof isNearby !== "undefined" && isNearby) {
							fetchNearby()
						}

						if (typeof isNotifications !== "undefined" && isNotifications) {
							showNotifications();
							markNotificationsAsRead();
						} else {
							var notificationsCount = 0;
							for (var a = 0; a < window.user.notifications.length; a++) {
								if (!window.user.notifications[a].isRead) {
									notificationsCount++;
								}
							}
							if (notificationsCount > 0) {
								if (document.getElementById("notifications-badge") != null) {
									document.getElementById("notifications-badge").innerHTML = "(" + notificationsCount + ")";
								}
							}
						}

						var friendsCount = 0;
						for (var a = 0; a < window.user.friends.length; a++) {
							if (window.user.friends[a].status == "Pending"
								&& !window.user.friends[a].sentByMe) {
								friendsCount++
							}
						}
						if (friendsCount > 0) {
							if (document.getElementById("friends-badge") != null) {
								document.getElementById("friends-badge").innerHTML = "(" + friendsCount + ")"
							}
						}

					/*	var html = `<li>
							<i class="ti-help"></i>
							 <a href="/customer-support">Customer support</a>
						</li>`
						if (document.getElementById("left-sidebar") != null) {
							document.getElementById("left-sidebar").innerHTML += html
						}*/

						/*$.getJSON("http://www.geoplugin.net/json.gp", function(data) {
							// console.log(JSON.stringify(data, null, 2))
							const city = data.geoplugin_city
							const continent = data.geoplugin_continentName
							const country = data.geoplugin_countryName
							const currencyConverter = data.geoplugin_currencyConverter
							const latitude = data.geoplugin_latitude
							const longitude = data.geoplugin_longitude
							const region = data.geoplugin_region
							const ipAddress = data.geoplugin_request
							const timezone = data.geoplugin_timezone

							const locationObj = {
								city: city,
								continent: continent,
								country: country,
								currencyConverter: currencyConverter,
								latitude: latitude,
								longitude: longitude,
								region: region,
								ipAddress: ipAddress,
								timezone: timezone
							}
						})*/

						socketIO.on("commentPosted", function (data) {
							// console.log(data)

							if (data.comment.user._id != user._id) {
								const node = document.querySelector("#post-comments-" + data.post._id)
								if (node != null) {
									node.innerHTML = createSingleCommentSection(data.comment, data.post) + node.innerHTML
								}
							}
						})

						socketIO.on("postReply", function (data) {
							// console.log(data)

							if (data.reply.user._id != user._id) {
								const node = document.querySelector("#comment-" + data.commentId)
								if (node != null) {
									node.innerHTML = createSingleReplySection(data.reply) + node.innerHTML
								}
							}
						})

					} else {
						localStorage.removeItem("accessToken");
					}
					showMainMenu();
				}
			};

			var formData = new FormData();
			formData.append("accessToken", localStorage.getItem("accessToken"));
			ajax.send(formData);
		} else {
			showMainMenu();
		}
	}

	function showMainMenu() {
		var html = "";

		if (localStorage.getItem("accessToken")) {

			
			html += '<li>';
				//html += '<a href="/friends">Friends <i class="fa fa-angle-right"></i></a>';
			html += '</li>';

			html += '<li>';
				//html += '<a href="/pages">Pages <i class="fa fa-angle-right"></i></a>';
			html += '</li>';

			html += '<li>';
				html += '<a href="/groups">Comunidad <i class="fa fa-angle-right"></i></a>';
			html += '</li>';


			html += '<li>';
				html += '<a href="/updateProfile">Perfil (' + (window.user == null ? '' : window.user.name) + ') <i class="fa fa-angle-right"></i></a>';
			html += '</li>';

			html += '<li>';
				html += '<a href="/logout" onclick="return doLogout();">Cerrar Sesión</a>';
			html += '</li>';
		} else {
			html += '<li>';
				html += '<a href="/login">Iniciar Sesión <i class="fa fa-angle-right"></i></a>';
			html += '</li>';

			html += '<li>';
				html += '<a href="/signup">Registrarse <i class="fa fa-angle-right"></i></a>';
			html += '</li>';
		}

		document.getElementById("main-menu").innerHTML = html;
		document.getElementById("main-menu-mobile").innerHTML = html;
	}

	function doLogout() {
		localStorage.removeItem("accessToken");
		return true;
	}

	window.onload = function () {
		getUser();
	};

	/*window.onerror = function (file, line, error) {
		alert(file + " " + line + " " + error);
	};*/
</script>

</body>

</html>