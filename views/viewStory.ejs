<%- include ("includes/header") %>

<input type="hidden" id="userId" value="<%= userId %>" />

<template id="storyApp">
	<section>
		<div class="gap1 gray-bg">
			<div class="container-fluid">
				<div class="row" style="background-color: black; height: 100%;">
					<div class="offset-md-3 col-md-6">
						<div class="row top-bars" style="margin-top: 10px;">
							<div v-bind:class="'col-md-' + Math.floor(12 / stories.length)" v-for="(story, index) in stories" style="padding-left: 5px; padding-right: 0px;">
								<div class="single-bar">
									<div class="single-bar-fill"></div>
								</div>
							</div>
						</div>

						<div class="row">
							<div class="col-md-12" style="margin-top: 20px;">
								<div class="owl-carousel owl-theme" id="carouselStories">
									<div class="item" v-for="(story, index) in stories">

										<div v-if="story.attachment != ''" style="display: contents;">
											<img class="d-block w-100" v-bind:src="mainURL + '/' + story.attachment" v-bind:alt="story.caption" style="height: 500px; object-fit: contain;" v-if="isAttachmentImage(story.attachment)" />

											<video v-bind:id="'story-video-' + story._id" 
												class="video-js"
												preload="auto"
												data-setup='{
													"controls": true
												}'
												v-if="!isAttachmentImage(story.attachment)"
												style="width: 100%; height: 500px; object-fit: contain;">
												<source v-bind:src="mainURL + '/' + story.attachment"></source>
												<p class="vjs-no-js">
												To view this video please enable JavaScript, and consider upgrading to a
												web browser that
													<a href="https://videojs.com/html5-video-support/" target="_blank">
													supports HTML5 video
													</a>
												</p>
											</video>
										</div>

										<div v-if="story.attachment != ''">
										    <p v-text="story.caption" style="background-color: black;
											    color: white;
											    padding: 5px;
											    margin-bottom: 0px;" class="text-center"></p>
										</div>

										<div v-if="story.attachment == ''" style="    font-size: 30px;
										    width: 100%;
										    height: 300px;
										    text-align: center;" v-bind:class='getCSSClass()'>
									    	<div v-text="story.caption" style="position: relative;
											    top: 50%;
											    transform: translateY(-50%);"></div>
									    </div>

									    <div class="text-center" v-if="isMyStory">
									    	<div style="display: contents; color: white; cursor: pointer;" class="story-viewers" v-bind:data-index="index">
									    		<i class="fa fa-eye"></i>

									    		<span v-text="'(' + story.viewers.length + ')'" style="font-size: 12px;"></span>
									    	</div>

									    	<form v-on:submit.prevent="deleteStory" style="display: contents;">
									    		<input type="hidden" name="_id" v-model="story._id" />
									    		<button type="submit" class="btn btn-link">
									    			<i class="fa fa-trash" style="color: white;"></i>
									    		</button>
									    	</form>
									    </div>

									    <div class="text-center">
									    	<div v-html="createLikesSection(story)" style="margin-top: 20px;"></div>
									    </div>

									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>

		<div class="modal" id="storyViewersModal" v-if="isMyStory">
			<div class="modal-dialog" role="document">
				<div class="modal-content">
					<div class="modal-header">
						<h5 class="modal-title">Viewers</h5>

						<button type="button" class="close" data-dismiss="modal" aria-label="Close">
							<span aria-hidden="true">&times;</span>
						</button>
					</div>

					<div class="modal-body">
						<table class="table table-bordered">
							<tr v-for="(viewer, index) in viewers">
								<td v-text="viewer.user.name"></td>
								<td>
									<img v-bind:src="getProfileImage(viewer.user)" style="width: 100px;" />
								</td>
								<td v-text="getTimePassed(viewer.createdAt)"></td>
							</tr>
						</table>
					</div>
				</div>
			</div>
		</div>
	</section>
</template>

<script>
	const onViewStoryPage = true;
	let storyApp = null;

	function showSingleStory() {
		const userId = document.getElementById("userId").value;

		storyApp = new Vue({
			el: "#storyApp",
			data: {
				stories: [],
				viewers: [],
				currentIndex: 0,
				CSSClasses: ["brown", "brown", "gray", "white", "green", "blue", "purple", "pink", "red"],
				owl: null,
				isMyStory: false,
				videoPlayers: []
			},

			methods: {
				deleteStory: function () {
					$(".single-bar-fill").stop();

					const self = this;
					const form = event.target;

					swal({
			            title: "Are you sure?",
			            text: "This story will be deleted.",
			            icon: "warning",
			            buttons: true,
			            dangerMode: true,
			        })
			        .then(function (isOkay) {
			            if (isOkay) {
			                var ajax = new XMLHttpRequest();
							ajax.open("POST", "/deleteStory", true);

							ajax.onreadystatechange = function () {
								if (this.readyState == 4) {
									if (this.status == 200) {
										// console.log(this.responseText);
										const response = JSON.parse(this.responseText);
										// console.log(response);

										if (response.status == "success") {
											swal("Success", response.message, "success");

											for (let a = 0; a < self.stories.length; a++) {
												if (self.stories[a]._id == form._id.value) {
													self.stories.splice(a, 1);
													break;
												}
											}

											self.playNextStory();
											self.animateTopBar();
										} else {
											swal("Error", response.message, "error");
										}
									}

									if (this.status == 500) {
										console.log(this.responseText);
									}
								}
							};

							var formData = new FormData(form);
							formData.append("accessToken", localStorage.getItem("accessToken"));
							ajax.send(formData);
			            } else {
			            	self.animateTopBar();
			            }
			        });
				},

				viewViewers: function (node) {
					$(".single-bar-fill").stop();

					const index = parseInt(node.getAttribute("data-index"));
					if (index < this.stories.length) {
						this.viewers = this.stories[index].viewers;
					}
					$("#storyViewersModal").modal("show");
				},

				getCSSClass: function () {
					const cssClass = this.CSSClasses[Math.floor(Math.random() * this.CSSClasses.length)];
					return cssClass;
				},

				playNextStory: function () {
					this.currentIndex++;
					this.showStory();

					var owl = $('#carouselStories').data('owl.carousel');
					owl.to(this.currentIndex);
				},

				animateTopBar: function () {
					const self = this;
					let story = this.stories[this.currentIndex];
					// console.log(story);

					$($(".single-bar-fill")[this.currentIndex]).css({
						"width": "0%"
					});

					if (story.attachment != "" && !isAttachmentImage(story.attachment)) {
						$($(".single-bar-fill")[this.currentIndex]).animate({
							width: "100%"
						}, story.seconds * 1000, function () {
							self.playNextStory();
						});
					} else {
						$($(".single-bar-fill")[this.currentIndex]).animate({
							width: "100%"
						}, 10000, function () {
							self.playNextStory();
						});
					}
				},

				showStory: function () {
					if (this.currentIndex >= this.stories.length) {
						return false;
					}

					this.markAsViewed(this.currentIndex);
					const story = this.stories[this.currentIndex];

					if (story.attachment != "" && !isAttachmentImage(story.attachment)) {
					} else {
						this.animateTopBar();
					}
				},

				markAsViewed: function (index) {
					var ajax = new XMLHttpRequest();
					ajax.open("POST", "/storyViewed", true);

					ajax.onreadystatechange = function () {
						if (this.readyState == 4) {
							if (this.status == 200) {
								// console.log(this.responseText);
								const response = JSON.parse(this.responseText);
								// console.log(response);

								if (response.status == "success") {
									// 
								} else {
									swal("Error", response.message, "error");
								}
							}

							if (this.status == 500) {
								console.log(this.responseText);
							}
						}
					};

					var formData = new FormData();
					formData.append("accessToken", localStorage.getItem("accessToken"));
					formData.append("_id", this.stories[index]._id);
					ajax.send(formData);
				},

				getData: function () {
					const self = this;

					var ajax = new XMLHttpRequest();
					ajax.open("POST", "/getSingleStory", true);

					ajax.onreadystatechange = function () {
						if (this.readyState == 4) {
							if (this.status == 200) {
								// console.log(this.responseText);
								const response = JSON.parse(this.responseText);
								// console.log(response);

								if (response.status == "success") {
									self.stories = response.stories;
									self.isMyStory = response.isMyStory;
									setTimeout(function () {
										self.showStory();
										self.owl = $("#carouselStories").owlCarousel({
											loop: false,
									        rewind: false,
									        singleItem: true,
									        autoplay: false,
									        dots: false,
									        nav: true,
									        items: 1,
									        touchDrag: false,
									        mouseDrag: false
										});

										self.owl.on('changed.owl.carousel', function(event) {
											if (typeof self.videoPlayers[self.currentIndex] !== "undefined") {
												self.videoPlayers[self.currentIndex].pause();
											}
											$(".single-bar-fill").stop();
										    self.currentIndex = event.item.index;
											self.showStory();

											if (typeof self.videoPlayers[self.currentIndex] !== "undefined") {
												self.videoPlayers[self.currentIndex].controls(true);
											}
										});

										let videoPlayers = document.querySelectorAll(".video-js");
										for (let a = 0; a < videoPlayers.length; a++) {
											let player = videojs(videoPlayers[a].id);
											/*player.on("play", function () {
												this.controls(false);
											});*/
											self.videoPlayers.push(player);
										}
									}, 500);
								} else {
									swal("Error", response.message, "error");
								}
							}

							if (this.status == 500) {
								console.log(this.responseText);
							}
						}
					};

					var formData = new FormData();
					formData.append("accessToken", localStorage.getItem("accessToken"));
					formData.append("userId", userId);
					ajax.send(formData);
				}
			},

			mounted: function () {
				const self = this;
				this.getData();

				$(document).on('hidden.bs.modal', '#storyViewersModal', function (event) {
					self.animateTopBar();
				});

				setTimeout(function () {
					const storyViewers = document.querySelectorAll(".story-viewers");
					for (let a = 0; a < storyViewers.length; a++) {
						storyViewers[a].addEventListener("click", function () {
							self.viewViewers(this);
						});
					}
				}, 100);
			},
		});
	}
</script>

<style>
	.we-video-info ul li span.share button {
		color: white !important;
	}
	.we-video-info ul li span.comment ins,
	.we-video-info ul li span.share,
	.we-video-info ul li span.share .dropdown {
		top: 0px !important;
	}
	.we-video-info ul li span,
	.we-video-info ul li ins {
		color: white !important;
	}
	.we-video-info ul {
		line-height: 0px !important;
	}
	.we-video-info {
		padding-top: 0px !important;
	}
	.red {
		background-color: #ad0707;
		color: white;
	}
	.pink {
		background-color: #810254;
		color: white;
	}
	.purple {
		background-color: #4a0281;
		color: white;
	}
	.blue {
		background-color: #024c81;
		color: white;
	}
	.green {
		background-color: #046626;
		color: white;
	}
	.white {
		background-color: white;
		color: black;
	}
	.gray {
		background-color: #3e3e3e;
		color: white;
	}
	.brown {
	    background-color: saddlebrown;
		color: white;
	}

	.single-bar-fill {
		background-color: white;
		width: 0px;
	    height: 5px;
    	border-radius: 50px;
	}
	.single-bar {
		background-color: #9D9D95;
	    width: 100%;
	    height: 5px;
    	border-radius: 50px;
	}
</style>

<%- include ("includes/footer") %>